{"version":3,"sources":["theme/theme.js","context/store.js","logo.svg","compenentes/navegacion/bar/menuIzquierda.js","compenentes/navegacion/bar/menuDerecha.js","compenentes/navegacion/bar/BarSesion.js","compenentes/navegacion/AppNavbar.js","compenentes/navegacion/RutaSegura.js","tools/Style.js","http/httpCliente.js","Services/SeguridadService.js","pages/seguridad/Login.js","tools/ControlTyping.js","pages/seguridad/Index.js","pages/seguridad/Create.js","Services/PlanService.js","pages/plan/Index.js","pages/plan/Create.js","Services/EmpresaService.js","pages/empresa/Index.js","pages/empresa/Create.js","pages/planesmodulo/Index.js","Services/PlanesModuloService.js","Services/ContratoService.js","pages/contrato/Index.js","compenentes/ConfirmDialog.js","pages/contrato/Create.js","App.js","reportWebVitals.js","context/reducers/sesionUsuarioReducer.js","context/reducers/openSnackbarReducer.js","context/reducers/openBackdropReducer.js","index.js","context/initialState.js","context/reducers/index.js"],"names":["theme","createTheme","palette","primary","light","main","dark","contrastText","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","MenuIzquierda","classes","className","list","List","style","background","ListItem","Avatar","src","FotoUsuario","ListItemText","color","Divider","component","Link","button","to","listItemText","MenuDerecha","usuario","salirSesion","username","onClick","useStyle","makeStyles","seccionDesktop","display","breakpoints","up","seccionMobile","grow","flexGrow","avatarSize","width","height","fontSize","fontWeight","paddingLeft","withRouter","props","sesionUsuario","dispatch","useState","abrirMenuIzquierda","setAbrirMenuIzquierda","abrirMenuDerecha","setAbrirMenuDerecha","cerrarMenuIzquierda","cerrarMenuDerecha","salirSesionApp","localStorage","removeItem","type","nuevoUsuario","autenticado","history","push","Fragment","Drawer","open","onClose","anchor","onKeyDown","Toolbar","IconButton","Typography","variant","Button","AppNavbar","AppBar","position","boxShadow","RutaSegura","Component","rest","render","paper","marginTop","flexDirection","alignItems","form","backgroundColor","avatar","margin","icon","fontZise","paperboton","paddingTop","left","right","thead","padding","borderBottom","lineHeight","tbody","axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","getItem","headers","Authorization","error","Promise","reject","requestAxios","get","url","post","body","put","delete","instancia","create","CancelToken","isCancel","getListarUsuario","model","resolve","eject","httpCliente","page","pages","then","response","catch","UserName","Password","setModel","modelMemoria","e","target","name","anterior","Container","maxWidth","LockClockOutlined","TextField","onChange","fullWidth","label","preventDefault","sesion","data","postLogin","status","setItem","token","openMensaje","mensaje","tipoRespuesta","submit","ControlTyping","texto","delay","textoValor","setTextoValor","useEffect","manejador","setTimeout","clearTimeout","FormIndexPlan","useHistory","textBusqueda","setTextBusqueda","typingBuscadorTexto","modelRequest","setModelRequest","items","total","modelResponse","setModelResponse","listarUsuario","a","newTextBusqueda","newpage","console","log","Box","Paper","zIndex","sx","elevation","BottomNavigation","showLabels","BottomNavigationAction","AddCircleOutline","overflow","Grid","container","btnfiltro","item","xs","sm","md","CardActions","spacing","InputProps","endAdornment","InputAdornment","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","Hidden","mdDown","TableBody","map","row","userName","nombreCompleto","email","telefono","idUser","EditOutlined","TableFooter","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","event","newpag","parseInt","onRowsPerPageChange","labelRowsPerPage","FormCrearUsuario","id","useParams","firstName","lastName","phoneNumber","password","btnObtener","undefined","key","getObtenerUsuario","btnRegresar","ArrowBackOutlined","SaveOutlined","getListarPlan","listarPlan","codigoPlan","nombrePlan","nroLicencia","idPlan","FormCrearPlan","getObtenerPlan","postGuardarPlan","getListarEmpresa","FormIndexEmpresa","listarEmpresa","ruc","razSoc","direccion","Date","fechaCrea","toLocaleString","tipoDB","nombreDB","idSociedad","FormCreateEmpresa","nombComercial","codigoSociedad","tipoEmpresa","condicion","nombreServer","usuarioServer","claveServer","puerto","listaTipoBaseDato","listaTipoEmpresa","getObtenerEmpresa","postGuardarEmpresa","FormControl","InputLabel","Select","MenuItem","text","FormCreatePlanModulo","React","selected","setSelected","listaPlan","model1","setModel1","listaMenu","model2","setModel2","MinusSquare","SvgIcon","d","PlusSquare","TransitionComponent","useSpring","from","opacity","transform","in","div","Collapse","StyledTreeItem","styled","TreeItem","treeItemClasses","iconContainer","group","marginLeft","borderLeft","alpha","getOnChange","checked","menu","allNode","array","codigo","number","idOpcionPadre","length","slice","getAllChild","codigoOpcion","Array","isArray","forEach","node","filter","v","i","indexOf","getNodeById","result","getChildById","includes","btnListarPlan","btnListarMenu","listaCodigoMenu","objetoModel","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","overflowY","row1","nodeId","idOpcion","FormControlLabel","control","Checkbox","some","currentTarget","stopPropagation","nombre","row2","row3","row4","row5","getListarContrato","getListarUsuarioLogueado","codigoContrato","nombreContrato","razonSocial","idContrato","useStyles","dialog","top","dialogTitle","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","secondary","cursor","ConfirmDialog","confirmDialog","setConfirmDialog","Dialog","isOpen","DialogContent","title","subTitle","DialogActions","onConfirm","FormCreateContrato","setOpen","openUser","setOpenUser","fechaContrato","setFechaContrato","fechaInicio","setFechaInicio","fechaFin","setFechaFin","cliente","setCliente","modalCliente","setModalCliente","listaContratoDet","listaCliente","listaModalidad","listaEstado","strIdContratoDet","strIdContrato","strRuc","strRazonSocial","strIdPlan","strNombrePlan","strNroLicencia","strNombreModalidad","strModalidad","strNombreEstado","strEstado","modelMemoria1","modelMemoria2","y","intValor","btnAbrirModal","ids","modalDetalle","dataDet","cli","idContratoDet","nombreModalidad","modalidad","nombreEstado","estado","btnCerarModal","btnCerarModalUser","btnEliminarUsuarioLogueado","user","modelUsuario","idcontratodet","listarUsuarioLogueado","btnEliminarContratoDetalle","rucs","modelContrato","disabled","Autocomplete","disablePortal","options","getOptionLabel","option","renderInput","params","_event","newTeam","strFechaContrato","strFechaInicio","strFechaFin","ButtonGroup","DeleteOutlined","DialogTitle","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","x","det","toLocaleDateString","fechaLogeo","idUsuarioLogeado","App","openSnackbar","openBackdrop","iniciaApp","setIniciaApp","Alert","forwardRef","ref","getObtenerUsuarioSesion","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","severity","Backdrop","drawer","CircularProgress","ThemeProvider","exact","path","Login","Inicio","UsuarioIndex","UsuarioCreate","UsuarioEdit","PlanIndex","PlanCreate","PlanEdit","EmpresaIndex","EmpresaCreate","EmpresaEdit","PlanesModuloIndex","ContratoIndex","ContratoCreate","ContratoEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","foto","sesionUsuarioReducer","state","action","openSnackbarReducer","openBackdropReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62e0303.chunk.js","sourcesContent":["import { createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n    palette:{\r\n        primary:{\r\n            light:\"#63a4fff\",\r\n            main:\"#0059b3\",\r\n            dark:\"#004ba0\",\r\n            contrastText:\"#ecfad8\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value = {useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { List, ListItem, ListItemText, Divider, Avatar } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport FotoUsuario from \"../../../logo.svg\"\r\n\r\nexport const MenuIzquierda = ({classes}) => (\r\n    <div className = {classes.list}>\r\n        <List style={{background:\"#0059b3\"}}>\r\n            <ListItem>\r\n                <Avatar src={ FotoUsuario }/>\r\n                <ListItemText primary=\"Dinamo Solutions\" style={{color:\"white\"}} />\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n            <ListItem component={Link} button to=\"/usuario\">\r\n                <i className=\"material-icons\">account_box</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Usuario\" />\r\n            </ListItem>\r\n            <ListItem component={Link} button to=\"/plan\">\r\n                <i className=\"material-icons\">add_box</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Plan\" />\r\n            </ListItem>\r\n            <ListItem component={Link} button to=\"/empresa\">\r\n                <i className=\"material-icons\">add_box</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Empresa\" />\r\n            </ListItem>\r\n            <ListItem component={Link} button to=\"/planesmodulo\">\r\n                <i className=\"material-icons\">add_box</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Plan Modulo\" />\r\n            </ListItem>\r\n            <ListItem component={Link} button to=\"/contrato\">\r\n                <i className=\"material-icons\">add_box</i>\r\n                <ListItemText classes={{primary: classes.listItemText}} primary=\"Contrato\" />\r\n            </ListItem>\r\n        </List>\r\n      \r\n    </div>\r\n);","import React from 'react';\r\nimport { List,ListItem,Avatar,ListItemText } from '@mui/material';\r\nimport FotoUsuario from \"../../../logo.svg\"\r\n\r\nexport const MenuDerecha = ( { \r\n    classes,\r\n    usuario,\r\n    salirSesion\r\n}) => (\r\n    <div className={classes.list}>\r\n        <List>\r\n            <ListItem>\r\n                <Avatar src={ usuario.username || FotoUsuario }/>\r\n                <ListItemText classes={{primary : classes.listItemText}} primary={ usuario ? usuario.username : \"\"}/>\r\n            </ListItem>\r\n            <ListItem button onClick={salirSesion}>\r\n                <ListItemText classes={{primary : classes.listItemText}} primary = \"Salir\"/>\r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);","import React, { useState } from \"react\";\r\nimport {\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Button,\r\n    Avatar,\r\n    Drawer,\r\n  } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport FotoUsuario from \"../../../logo.svg\"\r\nimport {useStateValue} from \"../../../context/store\";\r\nimport { MenuIzquierda } from \"./menuIzquierda\";\r\nimport {MenuDerecha} from './menuDerecha';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    seccionDesktop: {\r\n      display: \"none\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"flex\",\r\n      },\r\n    },\r\n    seccionMobile: {\r\n      display: \"flex\",\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    avatarSize: {\r\n      width: 40,\r\n      height: 40,\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    listItemText: {\r\n      fontSize: \"14px\",\r\n      fontWeight: 600,\r\n      paddingLeft: \"15px\",\r\n      color: \"#212121\",\r\n    },\r\n  }));\r\n\r\nconst BarSesion = (props) => {\r\n\r\n    const classes = useStyle();\r\n    const [{sesionUsuario}, dispatch] = useStateValue();\r\n    const [abrirMenuIzquierda, setAbrirMenuIzquierda] = useState(false);\r\n    const [abrirMenuDerecha, setAbrirMenuDerecha] = useState(false);\r\n\r\n    const cerrarMenuIzquierda = () => {\r\n        setAbrirMenuIzquierda(false);\r\n      };\r\n    \r\n      const abrirMenuIzquierdaAction = () => {\r\n        setAbrirMenuIzquierda(true);\r\n      };\r\n\r\n      const cerrarMenuDerecha = () => {\r\n        setAbrirMenuDerecha(false);\r\n      };\r\n\r\n      const salirSesionApp = () => {       \r\n        localStorage.removeItem(\"token_seguridad\");\r\n    \r\n        dispatch({\r\n           type : \"SALIR_SESION\",\r\n           nuevoUsuario : null,\r\n           autenticado : false\r\n        })\r\n    \r\n        props.history.push(\"/auth/login\");\r\n      };\r\n    \r\n      const abrirMenuDerechaAction = () => {\r\n        setAbrirMenuDerecha(true);\r\n      }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Drawer\r\n                open={abrirMenuIzquierda}\r\n                onClose={cerrarMenuIzquierda}\r\n                anchor=\"left\"\r\n            >\r\n                <div\r\n                className={classes.list}\r\n                onKeyDown={cerrarMenuIzquierda}\r\n                onClick={cerrarMenuIzquierda}\r\n                >\r\n                <MenuIzquierda classes={classes} />\r\n                </div>\r\n            </Drawer>\r\n\r\n            <Drawer\r\n                open={abrirMenuDerecha}\r\n                onClose={cerrarMenuDerecha}\r\n                anchor=\"right\"\r\n            >\r\n                <div\r\n                className={classes.list}\r\n                onClick={cerrarMenuDerecha}\r\n                onKeyDown={cerrarMenuDerecha}\r\n                >\r\n                <MenuDerecha \r\n                    classes={classes} \r\n                    salirSesion={salirSesionApp} \r\n                    usuario = { sesionUsuario ? sesionUsuario.usuario : null}\r\n                    />\r\n                </div>\r\n            </Drawer>\r\n\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\" onClick={abrirMenuIzquierdaAction}>\r\n                <i className=\"material-icons\">menu</i>\r\n                </IconButton>\r\n\r\n                <Typography variant=\"h6\">Panel Administrativo</Typography>\r\n                <div className={classes.grow}></div>\r\n\r\n                <div className={classes.seccionDesktop}>\r\n                <Button color=\"inherit\" onClick={salirSesionApp}>Salir</Button>\r\n                <Button color=\"inherit\">\r\n                    {sesionUsuario ? sesionUsuario.usuario.username : \"\"}\r\n                </Button>\r\n                <Avatar src={FotoUsuario}></Avatar>\r\n                </div>\r\n\r\n                <div className={classes.seccionMobile}>\r\n                <IconButton color=\"inherit\" onClick={abrirMenuDerechaAction}>\r\n                    <i className=\"material-icons\">more_vert</i>\r\n                </IconButton>\r\n                </div>\r\n            </Toolbar>\r\n        </React.Fragment>       \r\n    );\r\n}\r\n\r\nexport default withRouter(BarSesion);","import React from 'react';\r\nimport { AppBar, Toolbar } from '@mui/material';\r\nimport BarSesion from \"./bar/BarSesion\";\r\nimport { useStateValue } from '../../context/store';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AppNavbar = () => {\r\n\r\n  const [{sesionUsuario} , dispatch] = useStateValue();\r\n\r\n  return sesionUsuario \r\n    ? (sesionUsuario.autenticado == true ? \r\n        <div>\r\n          <AppBar position=\"fixed\" style={{boxShadow:\"none\"}}>\r\n            <BarSesion />\r\n          </AppBar> \r\n        </div>       \r\n         : \r\n         <Redirect to=\"/auth/login\" /> )\r\n    : <Redirect to=\"/auth/login\" />\r\n};\r\n\r\nexport default AppNavbar;","import React from \"react\";\r\nimport { useStateValue } from \"../../context/store\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction RutaSegura({ component: Component, ...rest }) {\r\n\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <Route \r\n        {...rest}\r\n        render = { (props) =>\r\n            sesionUsuario ? (\r\n                sesionUsuario.autenticado == true ? (\r\n                    <Component {...props} {...rest} />\r\n                )\r\n                : <Redirect to=\"/auth/login\" />\r\n            ): <Redirect to=\"/auth/login\" />\r\n        }\r\n    />\r\n  );\r\n}\r\n\r\nexport default RutaSegura;","const style = {\r\n    paper:{\r\n        marginTop:1,\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\"\r\n    },\r\n    form:{\r\n        width:\"100%\",\r\n        height:\"90%\",\r\n        marginTop:130,\r\n        backgroundColor:\"#fff\"\r\n    },\r\n    avatar:{\r\n        margin:5,\r\n        backgroundColor:\"#0059b3\",\r\n        width:60,\r\n        height:60\r\n    },\r\n    icon:{\r\n        fontZise:40\r\n    },\r\n    paperboton:{\r\n        position: 'fixed',  \r\n        paddingTop:'56px', \r\n        left: 0, \r\n        right: 0, \r\n        height:63,\r\n    },\r\n    thead:{\r\n        backgroundColor:\"rgb(11, 104, 198)\",\r\n        color:\"#fff\",\r\n        padding:\"13px\",\r\n        borderBottom:\"1px solid rgb(104, 103, 103)\",\r\n        lineHeight:\"1.0rem\"\r\n    },\r\n    tbody:{\r\n        padding:\"13px\",\r\n        borderBottom:\"1px solid rgb(210, 207, 207)\",\r\n        lineHeight:\"1.00\"\r\n    },\r\n};\r\n\r\nexport default style;","import axios  from 'axios';\r\n\r\n//axios.defaults.baseURL='http://localhost:32985/api';\r\naxios.defaults.baseURL='http://52.26.185.136:8020/api';\r\n\r\naxios.interceptors.request.use((config) => {\r\n    \r\n    const token_seguridad = window.localStorage.getItem('token_seguridad');\r\n\r\n    if(token_seguridad){\r\n        config.headers.Authorization = 'Bearer ' + token_seguridad;\r\n        return config;\r\n    }\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst requestAxios = {\r\n    get: (url) => axios.get(url),\r\n    post: (url, body) => axios.post(url, body),\r\n    put: (url, body) => axios.put(url, body),\r\n    delete: (url) => axios.delete(url)\r\n};\r\n\r\nexport default requestAxios;","import httpCliente from '../http/httpCliente';\r\nimport axios from 'axios';\r\n\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\nexport const postLogin = (usuario, dispatch) =>{\r\n    return new Promise((resolve, eject) => {\r\n        instancia.post('/usuario/postLogin', usuario).then(response=>{ \r\n            dispatch({\r\n                type : \"INICIAR_SESION\",\r\n                sesion : response.data,\r\n                autenticado : true\r\n              })         \r\n            resolve(response);\r\n        }).catch(error => {\r\n            resolve(error.response);\r\n        });\r\n    });\r\n};\r\n\r\nexport const getListarUsuario = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/usuario/getListarUsuario?'+ `page=${model.page}&pages=${model.pages}&request=${model.request}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getObtenerUsuario = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/usuario/getObtenerUsuario?'+ `id=${model.key}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\nexport const getObtenerUsuarioSesion = (dispatch) =>{\r\n    return new Promise((resolve, eject) => {\r\n      httpCliente.get('/usuario/getObtenerUsuarioSesion').then(response=>{\r\n            dispatch({\r\n                type:\"INICIAR_SESION\",\r\n                sesion:response.data,\r\n                autenticado:true,\r\n            });\r\n            \r\n             resolve(response);\r\n        }).catch(error => {\r\n            resolve(error.response);\r\n        })\r\n     });\r\n}\r\n\r\nexport const postGuardarUsuario = usuario =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.post('/usuario/postGuardarUsuario', usuario)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}","import { Avatar, Button, Container, TextField, Typography } from '@mui/material';\r\nimport style from \"../../tools/Style\";\r\nimport { useState } from \"react\";\r\nimport {postLogin} from '../../Services/SeguridadService';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useStateValue } from \"../../context/store\";\r\nimport { LockClockOutlined } from '@mui/icons-material';\r\n\r\nconst FormLogin =(props)=>{\r\n    const [{sesionUsuario}, dispatch] = useStateValue();\r\n\r\n    const [model, setModel] = useState({\r\n        UserName:'',\r\n        Password:''\r\n    });\r\n\r\n    const modelMemoria = e => {\r\n        const {name, value} = e.target;\r\n        setModel(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }\r\n\r\n    const btnLogin = e =>{\r\n        e.preventDefault();\r\n        dispatch({type : \"OPEN_BACKDROP\", open : true}) \r\n        postLogin(model, dispatch).then(response =>{   \r\n           dispatch({type : \"OPEN_BACKDROP\", open : false}) \r\n           if(response.status === 200) {\r\n                window.localStorage.setItem('token_seguridad', response.data.token);\r\n                props.history.push(\"/\");\r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Las credenciales son incorrectas\",\r\n                        tipoRespuesta: 2\r\n                    }\r\n                })\r\n            }           \r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <div style={style.paper}>\r\n                <Avatar style={style.avatar}>\r\n                    <LockClockOutlined style={style.icon} />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Login Usuario\r\n                </Typography>\r\n                <form style={style.form}>\r\n                    <TextField name=\"UserName\" value={model.UserName} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Usuario\" margin=\"normal\" />\r\n                    <TextField name=\"Password\" value={model.Password} onChange={modelMemoria} type=\"password\" variant=\"outlined\" fullWidth label=\"Contraseña\" margin=\"normal\" />\r\n                    <Button type=\"submit\" onClick={btnLogin} variant=\"contained\" fullWidth color=\"primary\" style={style.submit}>Ingresar</Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default withRouter(FormLogin);","import {useState, useEffect} from 'react';\r\n\r\nexport default function ControlTyping(texto, delay) {\r\n    const [textoValor, setTextoValor] = useState();\r\n\r\n    useEffect(()=> {\r\n\r\n        const manejador = setTimeout( () => {\r\n            setTextoValor(texto);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(manejador);\r\n        }\r\n\r\n    }, [texto]);\r\n\r\n    return textoValor;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {CardActions, Divider, Grid, Hidden, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, TextField, BottomNavigation,BottomNavigationAction, InputAdornment } from '@mui/material';\r\nimport { AddCircleOutline, EditOutlined} from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport ControlTyping from \"../../tools/ControlTyping\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport {getListarUsuario} from \"../../Services/SeguridadService\";\r\n\r\nconst FormIndexPlan = () =>{\r\n    let history = useHistory();\r\n\r\n    const [textBusqueda, setTextBusqueda] = useState(\"\");\r\n    const typingBuscadorTexto = ControlTyping(textBusqueda, 400);\r\n\r\n    const [modelRequest, setModelRequest] = useState({\r\n        request:'',\r\n        page:0,\r\n        pages: 5\r\n    });\r\n\r\n    const [modelResponse, setModelResponse] = useState({\r\n        items:[],\r\n        page:0,\r\n        pages: 0,\r\n        total:0\r\n    });\r\n    \r\n    useEffect(() => {      \r\n        const listarUsuario = async() =>{\r\n\r\n            let newTextBusqueda = \"\";\r\n            let newpage = modelRequest.page + 1;\r\n\r\n            if(typingBuscadorTexto){\r\n                newTextBusqueda = typingBuscadorTexto;\r\n                newpage = 1\r\n            }\r\n\r\n            const model ={\r\n                request: newTextBusqueda,\r\n                page: newpage,\r\n                pages: modelRequest.pages\r\n            }\r\n\r\n            const response = await getListarUsuario(model);\r\n            console.log(response.data);\r\n            setModelResponse(response.data);\r\n        };\r\n        \r\n        listarUsuario();\r\n        \r\n    }, [modelRequest, typingBuscadorTexto]);\r\n    \r\n    const btnNuevo=()=>{\r\n        history.push(\"/usuario/create\");\r\n    }\r\n\r\n    const btnCambiarPagina = (event, newpag) => {\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            page: parseInt(newpag)\r\n        }));\r\n    }\r\n\r\n    const btnCambiarCantidadPagina = (event) =>{\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            pages: parseInt(event.target.value),\r\n            page:0\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} onClick={() => btnNuevo()} />\r\n                </BottomNavigation>\r\n            </Paper>\r\n            <div style={style.form}>           \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>USUARIO</h3> \r\n                </Divider> \r\n                <Paper sx={{ marginTop:'-10px', width: '100%', overflow: 'hidden' }}>          \r\n                    <Grid container style={style.btnfiltro}>\r\n                    <Grid item xs={12} sm={6} md={6}>\r\n                            <CardActions>\r\n                                <TextField \r\n                                fullWidth \r\n                                name=\"textBusqueda\" \r\n                                variant=\"outlined\" \r\n                                label=\"Buscar Usuario\" \r\n                                onChange = {e => setTextBusqueda(e.target.value)} \r\n                                spacing={4} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                      <InputAdornment position=\"end\">\r\n                                        <SearchIcon />\r\n                                      </InputAdornment>\r\n                                     )\r\n                                    }}\r\n                               />\r\n                            </CardActions>\r\n                        </Grid>   \r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <CardActions>\r\n                    <TableContainer sx={{ maxHeight: 400 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={style.thead} align=\"left\">Usuario</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Nombre Completo</TableCell>\r\n                                    <Hidden mdDown>\r\n                                        <TableCell style={style.thead} align=\"left\">Email</TableCell>\r\n                                        <TableCell style={style.thead} align=\"left\">Telefono</TableCell>  \r\n                                    </Hidden>                                                              \r\n                                    <TableCell style={style.thead} align=\"left\">Acción</TableCell>                             \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {modelResponse.items==null? null: modelResponse.items.map((row) =>(\r\n                                    <TableRow key ={row.idUser}>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.userName}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nombreCompleto}</TableCell> \r\n                                        <Hidden mdDown>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.email}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.telefono}</TableCell>\r\n                                        </Hidden>                                       \r\n                                        <TableCell style={style.tbody} align=\"left\">\r\n                                                <Link to={`/usuario/edit/${row.idUser}`}> <EditOutlined /></Link>\r\n                                        </TableCell> \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                \r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    </CardActions>\r\n                    <TablePagination \r\n                                    component=\"div\" \r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    count={modelResponse.total}\r\n                                    rowsPerPage={modelRequest.pages}\r\n                                    page={modelRequest.page}\r\n                                    onPageChange={btnCambiarPagina}\r\n                                    onRowsPerPageChange={btnCambiarCantidadPagina}\r\n                                    labelRowsPerPage=\"Paginación\"\r\n                                />\r\n                </Paper>\r\n            </div>\r\n        </Box> \r\n      );\r\n    };\r\n\r\nexport default FormIndexPlan;","import {useEffect,useState} from 'react';\r\nimport {Container, Grid, TextField, Paper, BottomNavigation, BottomNavigationAction, Divider} from '@mui/material';\r\nimport { SaveOutlined, ArrowBackOutlined, AddCircleOutline} from '@mui/icons-material';\r\nimport style from \"../../tools/Style\";\r\nimport { useStateValue } from '../../context/store';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { postGuardarUsuario} from \"../../Services/SeguridadService\";\r\nimport { getObtenerUsuario} from \"../../Services/SeguridadService\";\r\nimport { Box } from '@mui/system';\r\n\r\nconst FormCrearUsuario = () =>{\r\n    let history = useHistory();\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const {id} = useParams();\r\n\r\n    const [model, setModel] = useState({\r\n        id:'',\r\n        idUser:'',\r\n        name:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        phoneNumber:'',\r\n        userName:'',\r\n        password:''\r\n    });\r\n\r\n    const modelMemoria = e =>{\r\n        const {name, value} = e.target;\r\n        setModel(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }\r\n    \r\n    const btnGuardar = e =>{\r\n        e.preventDefault();\r\n        dispatch({type : \"OPEN_BACKDROP\", open : true}) \r\n        postGuardarUsuario(model).then(response =>{   \r\n            dispatch({type : \"OPEN_BACKDROP\", open : false})           \r\n            if(response.status === 200) {\r\n                btnRegresar();\r\n            }\r\n            dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : response.data.mensaje,\r\n                        tipoRespuesta:response.data.tipoRespuesta\r\n                    }\r\n                })\r\n        });\r\n    }\r\n\r\n    const btnObtener =()=>{ \r\n        if(id!=undefined){\r\n            model.key= (id==undefined)? \"\": id;\r\n            getObtenerUsuario(model).then(response =>{            \r\n                if(response.status === 200) {\r\n                    setModel(response.data);\r\n                }else{\r\n                    dispatch({\r\n                        type : \"OPEN_SNACKBAR\",\r\n                        openMensaje : {\r\n                            open : true,\r\n                            mensaje : \"Hubo un problema en el sistema web\",\r\n                            tipoRespuesta: 0\r\n                        }\r\n                    })\r\n                }            \r\n            });\r\n        }         \r\n    }\r\n\r\n    const btnRegresar =()=>{\r\n        history.push(\"/usuario\");\r\n    }\r\n\r\n    useEffect(() => {        \r\n        btnObtener();    \r\n    }, []);\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Regresar\" icon={<ArrowBackOutlined color=\"secondary\"/>} onClick={btnRegresar} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Guardar\" icon={<SaveOutlined color=\"primary\"/>} type=\"submit\" onClick={btnGuardar} />           \r\n                </BottomNavigation>\r\n            </Paper>\r\n\r\n            <div style={style.form}> \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>USUARIO</h3> \r\n                </Divider>\r\n                <Container style={style.paper}>   \r\n                    <form>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"name\" variant=\"outlined\" fullWidth label=\"Nombre\" value={model.name} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"firstName\" variant=\"outlined\" fullWidth label=\"Apellido Paterno\" value={model.firstName} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"lastName\" variant=\"outlined\" fullWidth label=\"Apellido Materno\" value={model.lastName} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"email\" variant=\"outlined\" fullWidth label=\"Email\" value={model.email} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"phoneNumber\" variant=\"outlined\" fullWidth label=\"Telefono\" value={model.phoneNumber} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"userName\" variant=\"outlined\" fullWidth label=\"Ingrse su Usuario\" value={model.userName} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"password\" type=\"password\" variant=\"outlined\" fullWidth label=\"Ingrse Contraseña\" value={model.password} onChange={modelMemoria}/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default FormCrearUsuario;","import httpCliente from '../http/httpCliente';\r\n\r\nexport const getListarPlan = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/plan/getListarPlan?'+ `page=${model.page}&pages=${model.pages}&request=${model.request}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getObtenerPlan = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/plan/getObtenerPlan?'+ `id=${model.id}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const postGuardarPlan = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.post('/plan/postGuardarPlan', model)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {CardActions, Divider, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, TextField, BottomNavigation,BottomNavigationAction,InputAdornment } from '@mui/material';\r\nimport { AddCircleOutline, EditOutlined} from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport ControlTyping from \"../../tools/ControlTyping\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport {getListarPlan} from \"../../Services/PlanService\";\r\n\r\nconst FormIndexPlan = () =>{\r\n    let history = useHistory();\r\n\r\n    const [textBusqueda, setTextBusqueda] = useState(\"\");\r\n    const typingBuscadorTexto = ControlTyping(textBusqueda, 400);\r\n\r\n    const [modelRequest, setModelRequest] = useState({\r\n        request:'',\r\n        page:0,\r\n        pages: 5\r\n    });\r\n\r\n    const [modelResponse, setModelResponse] = useState({\r\n        items:[],\r\n        page:0,\r\n        pages: 0,\r\n        total:0\r\n    });     \r\n\r\n    useEffect(() => {      \r\n        const listarPlan = async() =>{\r\n\r\n            let newTextBusqueda = \"\";\r\n            let newpage = modelRequest.page + 1;\r\n\r\n            if(typingBuscadorTexto){\r\n                newTextBusqueda = typingBuscadorTexto;\r\n                newpage = 1\r\n            }\r\n\r\n            const model ={\r\n                request: newTextBusqueda,\r\n                page: newpage,\r\n                pages: modelRequest.pages\r\n            }\r\n\r\n            const response = await getListarPlan(model);\r\n            setModelResponse(response.data);\r\n        };\r\n        \r\n        listarPlan();\r\n        \r\n    }, [modelRequest, typingBuscadorTexto]);\r\n    \r\n    const btnNuevo=()=>{\r\n        history.push(\"/plan/create\");\r\n    }\r\n\r\n    const btnCambiarPagina = (event, newpag) => {\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            page: parseInt(newpag)\r\n        }));\r\n    }\r\n\r\n    const btnCambiarCantidadPagina = (event) =>{\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            pages: parseInt(event.target.value),\r\n            page:0\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} onClick={() => btnNuevo()} />\r\n                </BottomNavigation>\r\n            </Paper>\r\n            <div style={style.form}>\r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>PLAN</h3> \r\n                </Divider> \r\n                <Paper sx={{ marginTop:'-10px', width: '100%', overflow: 'hidden' }}>      \r\n                    <Grid container style={style.btnfiltro}>\r\n                        <Grid item xs={12} sm={4} md={6}>\r\n                            <CardActions>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    name=\"textBusqueda\" \r\n                                    variant=\"outlined\" \r\n                                    label=\"Buscar Plan\" \r\n                                    onChange = {e => setTextBusqueda(e.target.value)} \r\n                                    spacing={4} \r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <SearchIcon />\r\n                                        </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                /> \r\n                            </CardActions>\r\n                        </Grid>  \r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <CardActions>\r\n                    <TableContainer sx={{ maxHeight: 400 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={style.thead} align=\"left\">Código</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Plan</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Licencia</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Acción</TableCell>                             \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {modelResponse.items==null? null: modelResponse.items.map((row) =>(\r\n                                    <TableRow key ={row.idPlan}>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.codigoPlan}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nombrePlan}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nroLicencia}</TableCell>  \r\n                                        <TableCell style={style.tbody} align=\"left\">\r\n                                                <Link to={`/plan/edit/${row.idPlan}`}> <EditOutlined /></Link>\r\n                                        </TableCell> \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                \r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    </CardActions>\r\n                    <TablePagination \r\n                                    component=\"div\" \r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    count={modelResponse.total}\r\n                                    rowsPerPage={modelRequest.pages}\r\n                                    page={modelRequest.page}\r\n                                    onPageChange={btnCambiarPagina}\r\n                                    onRowsPerPageChange={btnCambiarCantidadPagina}\r\n                                    labelRowsPerPage=\"Paginación\"\r\n                                />\r\n                              \r\n                </Paper>\r\n            </div>\r\n        </Box> \r\n      );\r\n    };\r\n\r\nexport default FormIndexPlan;","import {useState, useEffect} from 'react';\r\nimport {Container, Grid, TextField, Paper, BottomNavigation, BottomNavigationAction, Divider} from '@mui/material';\r\nimport { SaveOutlined, ArrowBackOutlined, AddCircleOutline} from '@mui/icons-material';\r\nimport style from \"../../tools/Style\";\r\nimport { useStateValue } from '../../context/store';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport {postGuardarPlan} from \"../../Services/PlanService\";\r\nimport {getObtenerPlan} from \"../../Services/PlanService\";\r\nimport { Box } from '@mui/system';\r\n\r\nconst FormCrearPlan = () =>{\r\n    let history = useHistory();\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const {id} = useParams();\r\n\r\n    const [model, setModel] = useState({\r\n        idPlan:'',\r\n        codigoPlan:'',\r\n        nombrePlan:'',\r\n        nroLicencia: 0\r\n    });\r\n\r\n    const modelMemoria = e =>{\r\n        const {name, value} = e.target;\r\n        setModel(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }    \r\n\r\n    const btnGuardar = e =>{\r\n        e.preventDefault();\r\n        dispatch({type : \"OPEN_BACKDROP\", open : true}) \r\n        const objetoModel = {\r\n            idPlan: model.idPlan,\r\n            codigoPlan : model.codigoPlan,\r\n            nombrePlan : model.nombrePlan,\r\n            nroLicencia: parseInt(model.nroLicencia || 0)\r\n        };       \r\n        postGuardarPlan(objetoModel).then(response =>{ \r\n            dispatch({type : \"OPEN_BACKDROP\", open : false})            \r\n            if(response.status === 200) {\r\n                btnRegresar();\r\n            }\r\n            dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : response.data.mensaje,\r\n                        tipoRespuesta:response.data.tipoRespuesta\r\n                    }\r\n                })\r\n            });\r\n        }\r\n\r\n    const btnObtener =()=>{ \r\n        if(id!=undefined){\r\n            model.id= (id==undefined)? \"\": id;\r\n            getObtenerPlan(model).then(response =>{            \r\n                if(response.status === 200) {\r\n                    setModel(response.data);\r\n                }else{\r\n                    dispatch({\r\n                        type : \"OPEN_SNACKBAR\",\r\n                        openMensaje : {\r\n                            open : true,\r\n                            mensaje : \"Hubo un problema en el sistema web\",\r\n                            tipoRespuesta: 0\r\n                        }\r\n                    })\r\n                }            \r\n            });\r\n        }         \r\n    }\r\n\r\n    const btnRegresar =()=>{\r\n        history.push(\"/plan\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        btnObtener();    \r\n    }, []);\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Regresar\" icon={<ArrowBackOutlined color=\"secondary\"/>} onClick={btnRegresar} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Guardar\" icon={<SaveOutlined color=\"primary\"/>} type=\"submit\" onClick={btnGuardar} />           \r\n                </BottomNavigation>\r\n            </Paper>\r\n\r\n            <div style={style.form}> \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>PLAN</h3> \r\n                </Divider>\r\n                <Container style={style.paper}>  \r\n                    <form>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"codigoPlan\" value={model.codigoPlan} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Código Plan\"/>\r\n                            </Grid>    \r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"nombrePlan\" value={model.nombrePlan} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Nombre Plan\"/>\r\n                            </Grid> \r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"nroLicencia\" value={model.nroLicencia} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Nro Licencia\"/>\r\n                            </Grid>    \r\n                            <Grid item xs={12} md={12}>\r\n                            </Grid> \r\n                        </Grid>                  \r\n                    </form>               \r\n            </Container>\r\n            </div>  \r\n         </Box> \r\n    )\r\n};\r\n\r\nexport default FormCrearPlan;","import httpCliente from '../http/httpCliente';\r\n\r\nexport const getListarEmpresa = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/empresa/getListarEmpresa?'+ `page=${model.page}&pages=${model.pages}&request=${model.request}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getObtenerEmpresa = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/empresa/getObtenerEmpresa?'+ `id=${model.id}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const postGuardarEmpresa = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.post('/empresa/postGuardarEmpresa', model)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {CardActions, Divider, Grid, Hidden, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, TextField, BottomNavigation,BottomNavigationAction, InputAdornment, } from '@mui/material';\r\nimport { AddCircleOutline, EditOutlined} from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport ControlTyping from \"../../tools/ControlTyping\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport {getListarEmpresa} from \"../../Services/EmpresaService\";\r\n\r\nconst FormIndexEmpresa = () =>{\r\n    let history = useHistory();\r\n\r\n    const [textBusqueda, setTextBusqueda] = useState(\"\");\r\n    const typingBuscadorTexto = ControlTyping(textBusqueda, 400);\r\n\r\n    const [modelRequest, setModelRequest] = useState({\r\n        request:'',\r\n        page:0,\r\n        pages: 5\r\n    });\r\n\r\n    const [modelResponse, setModelResponse] = useState({\r\n        items:[],\r\n        page:0,\r\n        pages: 0,\r\n        total:0\r\n    });\r\n    \r\n    useEffect(() => {      \r\n        const listarEmpresa = async() =>{\r\n\r\n            let newTextBusqueda = \"\";\r\n            let newpage = modelRequest.page + 1;\r\n\r\n            if(typingBuscadorTexto){\r\n                newTextBusqueda = typingBuscadorTexto;\r\n                newpage = 1\r\n            }\r\n\r\n            const model ={\r\n                request: newTextBusqueda,\r\n                page: newpage,\r\n                pages: modelRequest.pages\r\n            }\r\n\r\n            const response = await getListarEmpresa(model);\r\n            setModelResponse(response.data);\r\n        };\r\n        \r\n        listarEmpresa();\r\n        \r\n    }, [modelRequest, typingBuscadorTexto]);\r\n    \r\n    const btnNuevo=()=>{\r\n        history.push(\"/empresa/create\");\r\n    }\r\n\r\n    const btnCambiarPagina = (event, newpag) => {\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            page: parseInt(newpag)\r\n        }));\r\n    }\r\n\r\n    const btnCambiarCantidadPagina = (event) =>{\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            pages: parseInt(event.target.value),\r\n            page:0\r\n        }));\r\n    }\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} onClick={() => btnNuevo()} />\r\n                </BottomNavigation>\r\n            </Paper>\r\n            <div style={style.form}>\r\n                <Divider>\r\n                        <h3 style={{color: '#1976d2'}}>EMPRESA</h3> \r\n                </Divider> \r\n                <Paper sx={{ marginTop:'-10px', width: '100%', overflow: 'hidden' }}>        \r\n                    <Grid container container style={style.btnfiltro}>\r\n                        <Grid item xs={12} sm={4} md={6}>\r\n                            <CardActions>\r\n                                <TextField \r\n                                    fullWidth \r\n                                    name=\"textBusqueda\" \r\n                                    variant=\"outlined\" \r\n                                    label=\"Buscar Empresa\" \r\n                                    onChange = {e => setTextBusqueda(e.target.value)} \r\n                                    spacing={4} \r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <SearchIcon />\r\n                                        </InputAdornment>\r\n                                        )\r\n                                        }}\r\n                                /> \r\n                            </CardActions>\r\n                        </Grid> \r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <CardActions>\r\n                    <TableContainer sx={{ maxHeight: 400 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={style.thead} align=\"left\">Ruc</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Razón Social</TableCell>\r\n                                    <Hidden mdDown>\r\n                                        <TableCell style={style.thead} align=\"left\">Dirección</TableCell>  \r\n                                        <TableCell style={style.thead} align=\"left\">Fecha Registro</TableCell>                              \r\n                                        <TableCell style={style.thead} align=\"left\">Tipo DB</TableCell>\r\n                                        <TableCell style={style.thead} align=\"left\">Nombre DB</TableCell>\r\n                                    </Hidden> \r\n                                    <TableCell style={style.thead} align=\"left\">Acción</TableCell>                             \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {modelResponse.items==null? null: modelResponse.items.map((row) =>(\r\n                                    <TableRow key ={row.idSociedad}>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.ruc}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.razSoc}</TableCell>\r\n                                        <Hidden mdDown>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.direccion}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{(new Date(row.fechaCrea)).toLocaleString()}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.tipoDB}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.nombreDB}</TableCell>                                    \r\n                                        </Hidden> \r\n                                        <TableCell style={style.tbody} align=\"left\">\r\n                                                <Link to={`/empresa/edit/${row.idSociedad}`}> <EditOutlined /></Link>\r\n                                        </TableCell> \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                \r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    </CardActions>\r\n                    <TablePagination \r\n                                    component=\"div\" \r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    count={modelResponse.total}\r\n                                    rowsPerPage={modelRequest.pages}\r\n                                    page={modelRequest.page}\r\n                                    onPageChange={btnCambiarPagina}\r\n                                    onRowsPerPageChange={btnCambiarCantidadPagina}\r\n                                    labelRowsPerPage=\"Paginación\"\r\n                                />\r\n                </Paper>\r\n            </div>\r\n         </Box> \r\n      );\r\n    };\r\n\r\nexport default FormIndexEmpresa;","import {useState, useEffect} from 'react';\r\nimport {Container, FormControl, Grid, InputLabel, MenuItem, Select, TextField,BottomNavigation,BottomNavigationAction, Paper, Divider} from '@mui/material';\r\nimport { SaveOutlined, ArrowBackOutlined, AddCircleOutline} from '@mui/icons-material';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport { useStateValue } from '../../context/store';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n import {postGuardarEmpresa} from \"../../Services/EmpresaService\";\r\n import {getObtenerEmpresa} from \"../../Services/EmpresaService\";\r\n\r\n\r\nconst FormCreateEmpresa = () => {\r\n    let history = useHistory();\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const {id} = useParams();\r\n\r\n    const [model, setModel] = useState({\r\n        idSociedad :'',  \r\n        razSoc:'',\r\n        nombComercial:'',\r\n        direccion: '',\r\n        ruc: '',\r\n        codigoSociedad: '',\r\n        tipoEmpresa: '',\r\n        condicion:'',\r\n        tipoDB: '',\r\n        nombreServer: '',\r\n        usuarioServer: '',\r\n        claveServer: '',\r\n        puerto: '',\r\n        nombreDB: '',\r\n        listaTipoBaseDato:[],\r\n        listaTipoEmpresa:[]\r\n    });    \r\n\r\n    const modelMemoria = e =>{\r\n        const {name, value} = e.target;\r\n        setModel(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }\r\n    \r\n    const btnGuardar = e =>{\r\n        e.preventDefault();\r\n        dispatch({type : \"OPEN_BACKDROP\", open : true})        \r\n        postGuardarEmpresa(model).then(response =>{  \r\n            dispatch({type : \"OPEN_BACKDROP\", open : false})          \r\n            if(response.status === 200) {\r\n                btnRegresar();\r\n            }\r\n            dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : response.data.mensaje,\r\n                        tipoRespuesta:response.data.tipoRespuesta\r\n                    }\r\n                })\r\n            });\r\n        }\r\n\r\n    const btnObtener =()=>{ \r\n        model.id= (id==undefined || id==0)? 0: id;\r\n        getObtenerEmpresa(model).then(response =>{            \r\n            if(response.status === 200) {\r\n                setModel(response.data);\r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Hubo un problema en el sistema web\",\r\n                        tipoRespuesta: 0\r\n                    }\r\n                })\r\n            }            \r\n        }); \r\n    }\r\n\r\n    const btnRegresar =()=>{\r\n        history.push(\"/empresa\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        btnObtener();    \r\n    }, []);\r\n\r\n    // const fotoKey = uuidv4();\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Regresar\" icon={<ArrowBackOutlined color=\"secondary\"/>} onClick={btnRegresar} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Guardar\" icon={<SaveOutlined color=\"primary\"/>} type=\"submit\" onClick={btnGuardar} />           \r\n                </BottomNavigation>\r\n            </Paper>\r\n    \r\n            <div style={style.form}> \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>EMPRESA</h3> \r\n                </Divider>         \r\n                <Container style={style.paper}>  \r\n                    {/* <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto} /> */}              \r\n                    <form>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"razSoc\" value={model.razSoc} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Razón Social\"/>\r\n                            </Grid>    \r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"nombComercial\" value={model.nombComercial} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Nombre Comercial\"/>\r\n                            </Grid> \r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"direccion\" value={model.direccion} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Dirección\"/>\r\n                            </Grid>    \r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"ruc\" value={model.ruc} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Ruc\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"codigoSociedad\" value={model.codigoSociedad} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Código Sociedad\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Tipo Empresa</InputLabel>\r\n                                    <Select variant=\"outlined\" name=\"tipoEmpresa\" value={model.tipoEmpresa} label=\"Tipo Base Dato\" onChange={modelMemoria}>\r\n                                    {model.listaTipoEmpresa.map((name) => (\r\n                                        <MenuItem\r\n                                            key={name.value}\r\n                                            value={name.value}\r\n                                            >\r\n                                            {name.text}\r\n                                        </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"condicion\" value={model.condicion} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Condición Empresa\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Tipo Base Dato</InputLabel>\r\n                                    <Select variant=\"outlined\" name=\"tipoDB\" value={model.tipoDB} label=\"Tipo Base Dato\" onChange={modelMemoria}>\r\n                                    {model.listaTipoBaseDato.map((name) => (\r\n                                        <MenuItem\r\n                                            key={name.value}\r\n                                            value={name.value}\r\n                                            >\r\n                                            {name.text}\r\n                                        </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"nombreServer\" value={model.nombreServer} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Nombre Servidor\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"usuarioServer\" value={model.usuarioServer} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Usuario Servidor\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"claveServer\" value={model.claveServer} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Clave Servidor\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"puerto\" value={model.puerto} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Puerto\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField name=\"nombreDB\" value={model.nombreDB} onChange={modelMemoria} variant=\"outlined\" fullWidth label=\"Nombre Base Dato\"/>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                            {/* <ImageUploader\r\n                                withIcon={false}\r\n                                key={fotoKey}\r\n                                singleImage={true}\r\n                                buttonText=\"Seleccione una imagen de perfil\"\r\n                                onChange={subirFoto}\r\n                                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                                maxFileSize={5242880}\r\n                            /> */}\r\n                            </Grid>\r\n                        </Grid>                       \r\n                    </form>\r\n                </Container>\r\n            </div>   \r\n        </Box>      \r\n      );\r\n    };\r\n\r\nexport default FormCreateEmpresa;","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container, FormControl, Grid, InputLabel, MenuItem, Select,BottomNavigation, Paper, Divider, SvgIcon, Collapse, Checkbox, FormControlLabel, BottomNavigationAction} from '@mui/material';\r\nimport { InvertColorsOff, SaveOutlined} from '@mui/icons-material';\r\nimport { alpha, styled } from '@mui/material/styles'\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport { useStateValue } from '../../context/store';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\n import {getListarPlan} from \"../../Services/PlanesModuloService\";\r\n import {getListarMenu} from \"../../Services/PlanesModuloService\";\r\n import {postGuardarPlanModulo} from \"../../Services/PlanesModuloService\";\r\n\r\n\r\nconst FormCreatePlanModulo = () => {\r\n    let history = useHistory();\r\n\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const [selected, setSelected] = React.useState([]);\r\n    const {id} = useParams();\r\n\r\n    const [model1, setModel1] = useState({\r\n        idPlan:'',\r\n        listaPlan:[]\r\n    });  \r\n    \r\n    const [model2, setModel2] = useState({\r\n        idPlan:'',\r\n        listaMenu:[]\r\n    });  \r\n\r\n    const modelMemoria = e =>{\r\n        const {name, value} = e.target;\r\n        setModel1(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n\r\n        btnListarMenu(e.target.value);\r\n    }\r\n    \r\n    function MinusSquare(props) {\r\n        return (\r\n            <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\r\n            </SvgIcon>\r\n        );\r\n    }\r\n    \r\n    function PlusSquare(props) {\r\n        return (\r\n            <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\r\n            {/* tslint:disable-next-line: max-line-length */}\r\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\r\n            </SvgIcon>\r\n        );\r\n    }\r\n\r\n    function TransitionComponent(props) {\r\n        const style = useSpring({\r\n            from: {\r\n            opacity: 0,\r\n            transform: 'translate3d(20px,0,0)',\r\n            },\r\n            to: {\r\n            opacity: props.in ? 1 : 0,\r\n            transform: `translate3d(${props.in ? 0 : 20}px,0,0)`,\r\n            },\r\n        });\r\n        \r\n        return (\r\n            <animated.div style={style}>\r\n            <Collapse {...props} />\r\n            </animated.div>\r\n        );\r\n    }\r\n    \r\n    TransitionComponent.propTypes = {\r\n    in: PropTypes.bool,\r\n    };\r\n\r\n    const StyledTreeItem = styled((props) => (\r\n        <TreeItem {...props} TransitionComponent={TransitionComponent} />\r\n      ))(({ theme }) => ({\r\n        [`& .${treeItemClasses.iconContainer}`]: {\r\n          '& .close': {\r\n            opacity: 0.3,\r\n          },\r\n        },\r\n        [`& .${treeItemClasses.group}`]: {\r\n          marginLeft: 15,\r\n          paddingLeft: 18,\r\n          borderLeft: `1px dashed ${alpha(theme.palette.text.primary, 0.4)}`,\r\n        },\r\n    }));\r\n    \r\n    function getOnChange(checked, menu) {\r\n        const allNode = [] = getChildById(checked, menu, menu.codigoOpcion);\r\n        let array = checked\r\n        ? [...selected, ...allNode]\r\n        : selected.filter(value => !allNode.includes(value));\r\n\r\n        setSelected(array);\r\n    }\r\n\r\n    function getChildById(checked, menu, id) {\r\n        let array = [];\r\n        let codigo= '';\r\n        let number = 0;\r\n\r\n        if(menu.idOpcionPadre != null && checked) {\r\n            if(menu.idOpcionPadre.length >= 2){\r\n                array.push(menu.idOpcionPadre);\r\n    \r\n                number = menu.idOpcionPadre.length - 2;\r\n                codigo = menu.idOpcionPadre.slice(0, number); \r\n    \r\n                if(codigo.length >= 2){\r\n                     array.push(codigo);\r\n                    \r\n                     number = codigo.length - 2;\r\n                     codigo = codigo.slice(0, number); \r\n    \r\n                     if(codigo.length >= 2){\r\n                        array.push(codigo);\r\n                    \r\n                        number = codigo.length - 2;\r\n                        codigo = codigo.slice(0, number);  \r\n    \r\n                        if(codigo.length >= 2){\r\n                            array.push(codigo);\r\n                        }\r\n                     }\r\n                }\r\n            }\r\n        }        \r\n\r\n        function getAllChild(menu) {\r\n            if (menu === null) return [];\r\n\r\n            array.push(menu.codigoOpcion);\r\n\r\n            if (Array.isArray(menu.listaMenu)) {\r\n                menu.listaMenu.forEach(node => {\r\n                    array = [...array, ...getAllChild(node)];\r\n                    array = array.filter((v, i) => array.indexOf(v) === i);\r\n                });\r\n            }\r\n            return array;\r\n        }\r\n\r\n        function getNodeById(menu, id) {\r\n            if (menu.codigoOpcion === id) {\r\n                return menu;\r\n            } else if (Array.isArray(menu.listaMenu)) {\r\n                let result = null;\r\n                menu.listaMenu.forEach(node => {\r\n                    if (!!getNodeById(node, id)) {\r\n                        result = getNodeById(node, id);\r\n                    }\r\n                });\r\n                return result;\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        return getAllChild(getNodeById(menu, id));\r\n    }\r\n\r\n    const btnGuardar = e =>{   \r\n        e.preventDefault(); \r\n        dispatch({type : \"OPEN_BACKDROP\", open : true}) \r\n        const objetoModel = {\r\n            idPlan: model1.idPlan,\r\n            listaCodigoMenu: selected\r\n        };        \r\n        postGuardarPlanModulo(objetoModel).then(response =>{           \r\n            dispatch({type : \"OPEN_BACKDROP\", open : false}) \r\n            dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : response.data.mensaje,\r\n                        tipoRespuesta:response.data.tipoRespuesta\r\n                    }\r\n                })\r\n        });\r\n    }\r\n\r\n    const btnListarPlan =()=>{ \r\n        getListarPlan(model1).then(response =>{            \r\n            if(response.status === 200) {\r\n                setModel1(response.data);\r\n                if(response.data.idPlan!=null){\r\n                    btnListarMenu(response.data.idPlan)\r\n                }               \r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Hubo un problema en el sistema web\",\r\n                        tipoRespuesta: 0\r\n                    }\r\n                })\r\n            }            \r\n        }); \r\n    }\r\n\r\n    const btnListarMenu =(id)=>{ \r\n        dispatch({type : \"OPEN_BACKDROP\", open : true}) \r\n        model2.idPlan = id;\r\n        getListarMenu(model2).then(response =>{            \r\n            if(response.status === 200) {\r\n                setModel2(response.data);\r\n                setSelected(response.data.listaCodigoMenu);\r\n                dispatch({type : \"OPEN_BACKDROP\", open : false}) \r\n            }else{\r\n                dispatch({type : \"OPEN_BACKDROP\", open : false}) \r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Hubo un problema en el sistema web\",\r\n                        tipoRespuesta: 0\r\n                    }\r\n                })\r\n            }            \r\n        }); \r\n    }\r\n\r\n    useEffect(() => {\r\n        btnListarPlan();    \r\n    }, []);\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Guardar\" icon={<SaveOutlined color=\"primary\"/>} type=\"submit\" onClick={btnGuardar} />           \r\n                </BottomNavigation>\r\n            </Paper>\r\n    \r\n            <div style={style.form}> \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>PLAN MODULO</h3> \r\n                </Divider>                  \r\n                         \r\n                <Container>  \r\n                    <form>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} md={12} sm={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"demo-simple-select-label\">Plan</InputLabel>\r\n                                    <Select variant=\"outlined\" name=\"idPlan\" value={model1.idPlan} label=\"Tipo Base Dato\" onChange={modelMemoria}>\r\n                                    {model1.listaPlan.map((name) => (\r\n                                        <MenuItem\r\n                                            key={name.idPlan}\r\n                                            value={name.idPlan}\r\n                                            >\r\n                                            {name.nombrePlan}\r\n                                        </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid> \r\n                            <Grid item xs={12} md={12} sm={12}>\r\n                            <Divider></Divider>\r\n                                <TreeView   \r\n                                    fullWidth   \r\n                                    aria-label=\"customized\"\r\n                                    defaultExpanded={['1']}\r\n                                    defaultCollapseIcon={<MinusSquare />}\r\n                                    defaultExpandIcon={<PlusSquare />}\r\n                                    sx={{ height: 800, flexGrow: 1, overflowY: 'auto', paddingTop:'10px' }}\r\n                                    >\r\n                                    {model2.listaMenu==null? null: model2.listaMenu.map((row1) =>(                                        \r\n                                        <StyledTreeItem \r\n                                            key={row1.idOpcion}\r\n                                            nodeId={row1.idOpcion} \r\n                                            label={\r\n                                                <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        checked={selected.some(item => item === row1.codigoOpcion)}\r\n                                                        onChange={event =>getOnChange(event.currentTarget.checked, row1)}\r\n                                                        onClick={e => e.stopPropagation()}\r\n                                                    />\r\n                                                }\r\n                                                label={<>{row1.nombre}</>}\r\n                                                key={row1.idOpcion}\r\n                                                />\r\n                                            }\r\n                                        >\r\n\r\n                                            {row1.listaMenu==null? null: row1.listaMenu.map((row2) =>(                                        \r\n                                                <StyledTreeItem \r\n                                                    key={row2.idOpcion}\r\n                                                    nodeId={row2.idOpcion} \r\n                                                    label={\r\n                                                    <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            checked={selected.some(item => item === row2.codigoOpcion)}\r\n                                                            onChange={event =>getOnChange(event.currentTarget.checked, row2)}\r\n                                                            onClick={e => e.stopPropagation()}\r\n                                                        />\r\n                                                    }\r\n                                                    label={<>{row2.nombre}</>}\r\n                                                    key={row2.idOpcion}\r\n                                                    />\r\n                                                    }\r\n                                                >\r\n\r\n                                                    {row2.listaMenu==null? null: row2.listaMenu.map((row3) =>(                                        \r\n                                                        <StyledTreeItem \r\n                                                            key={row3.idOpcion}\r\n                                                            nodeId={row3.idOpcion} \r\n                                                            label={\r\n                                                            <FormControlLabel\r\n                                                            control={\r\n                                                                <Checkbox\r\n                                                                    checked={selected.some(item => item === row3.codigoOpcion)}\r\n                                                                    onChange={event =>getOnChange(event.currentTarget.checked, row3)}\r\n                                                                    onClick={e => e.stopPropagation()}\r\n                                                                />\r\n                                                            }\r\n                                                            label={<>{row3.nombre}</>}\r\n                                                            key={row3.idOpcion}\r\n                                                            />\r\n                                                            }\r\n                                                        >\r\n\r\n                                                            {row3.listaMenu==null? null: row3.listaMenu.map((row4) =>(                                        \r\n                                                                <StyledTreeItem \r\n                                                                    key={row4.idOpcion}\r\n                                                                    nodeId={row4.idOpcion} \r\n                                                                    label={\r\n                                                                    <FormControlLabel\r\n                                                                    control={\r\n                                                                        <Checkbox\r\n                                                                            checked={selected.some(item => item === row4.codigoOpcion)}\r\n                                                                            onChange={event =>getOnChange(event.currentTarget.checked, row4)}\r\n                                                                            onClick={e => e.stopPropagation()}\r\n                                                                        />\r\n                                                                    }\r\n                                                                    label={<>{row4.nombre}</>}\r\n                                                                    key={row4.idOpcion}\r\n                                                                    />\r\n                                                                    }\r\n                                                                >\r\n                                                                    \r\n                                                                    {row4.listaMenu==null? null: row4.listaMenu.map((row5) =>(                                        \r\n                                                                        <StyledTreeItem\r\n                                                                            key={row5.idOpcion}\r\n                                                                            nodeId={row5.idOpcion} \r\n                                                                            label={\r\n                                                                            <FormControlLabel\r\n                                                                            control={\r\n                                                                                <Checkbox\r\n                                                                                    checked={selected.some(item => item === row5.codigoOpcion)}\r\n                                                                                    onChange={event =>getOnChange(event.currentTarget.checked, row5)}\r\n                                                                                    onClick={e => e.stopPropagation()}\r\n                                                                                />\r\n                                                                            }\r\n                                                                            label={<>{row5.nombre}</>}\r\n                                                                            key={row5.idOpcion}\r\n                                                                            />\r\n                                                                            }\r\n                                                                        >\r\n                                                                        </StyledTreeItem>\r\n                                                                    ))}\r\n                                                                </StyledTreeItem>\r\n                                                            ))}\r\n                                                        </StyledTreeItem>\r\n                                                    ))}\r\n                                                </StyledTreeItem>\r\n                                            ))}\r\n                                        </StyledTreeItem>\r\n                                    ))}\r\n                                    \r\n                                </TreeView>\r\n                            </Grid> \r\n                           \r\n                            <Grid item xs={12} md={12}>\r\n                            </Grid>\r\n                        </Grid>                       \r\n                    </form>\r\n                </Container>\r\n            </div>   \r\n        </Box>      \r\n      );\r\n    };\r\n\r\nexport default FormCreatePlanModulo;","import httpCliente from '../http/httpCliente';\r\n\r\nexport const getListarPlan = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/planmodulo/getListarPlan')\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getListarMenu = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/planmodulo/getListarMenu?'+ `id=${model.idPlan}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const postGuardarPlanModulo = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.post('/planmodulo/postGuardarPlanModulo', model)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}","import httpCliente from '../http/httpCliente';\r\n\r\nexport const getListarContrato = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/contrato/getListarContrato?'+ `page=${model.page}&pages=${model.pages}&request=${model.request}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getListarUsuarioLogueado = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/contrato/getListarUsuarioLogueado?'+ `page=${model.page}&pages=${model.pages}&request=${model.request}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const getObtenerContrato = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.get('/contrato/getObtenerContrato?'+ `id=${model.id}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const postGuardarContrato = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.post('/contrato/postGuardarContrato', model)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport const deleteUsuarioLogueado = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.delete('/contrato/deleteUsuarioLogueado?'+ `idcontratodet=${model.idcontratodet}&user=${model.user}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}\r\n\r\nexport const deleteContratoDetalle = model =>{\r\n    return new Promise((resolve, eject) => {\r\n        httpCliente.delete('/contrato/deleteContratoDetalle?'+ `ruc=${model.ruc}`)\r\n        .then(response=>{\r\n            resolve(response);\r\n        }).catch(error=>{\r\n            resolve(error.response);\r\n        });\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {CardActions, Divider, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, TextField, BottomNavigation,BottomNavigationAction, InputAdornment, Hidden } from '@mui/material';\r\nimport { AddCircleOutline, EditOutlined} from '@mui/icons-material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport ControlTyping from \"../../tools/ControlTyping\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport {getListarContrato} from \"../../Services/ContratoService\";\r\n\r\nconst FormIndexPlan = () =>{\r\n    let history = useHistory();\r\n\r\n    const [textBusqueda, setTextBusqueda] = useState(\"\");\r\n    const typingBuscadorTexto = ControlTyping(textBusqueda, 400);\r\n\r\n    const [modelRequest, setModelRequest] = useState({\r\n        request:'',\r\n        page:0,\r\n        pages: 5\r\n    });\r\n\r\n    const [modelResponse, setModelResponse] = useState({\r\n        items:[],\r\n        page:0,\r\n        pages: 0,\r\n        total:0\r\n    });\r\n    \r\n    useEffect(() => {      \r\n        const listarPlan = async() =>{\r\n            let newTextBusqueda = \"\";\r\n            let newpage = modelRequest.page + 1;\r\n\r\n            if(typingBuscadorTexto){\r\n                newTextBusqueda = typingBuscadorTexto;\r\n                newpage = 1\r\n            }\r\n\r\n            const model ={\r\n                request: newTextBusqueda,\r\n                page: newpage,\r\n                pages: modelRequest.pages\r\n            }\r\n\r\n            const response = await getListarContrato(model);\r\n            setModelResponse(response.data);\r\n        };\r\n        \r\n        listarPlan();\r\n        \r\n    }, [modelRequest, typingBuscadorTexto]);\r\n    \r\n    const btnNuevo=()=>{\r\n        history.push(\"/contrato/create\");\r\n    }\r\n\r\n    const btnCambiarPagina = (event, newpag) => {\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            page: parseInt(newpag)\r\n        }));\r\n    }\r\n\r\n    const btnCambiarCantidadPagina = (event) =>{\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            pages: parseInt(event.target.value),\r\n            page:0\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} onClick={() => btnNuevo()} />\r\n                </BottomNavigation>\r\n            </Paper>\r\n            <div style={style.form}>\r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>CONTRATO</h3> \r\n                </Divider> \r\n                <Paper sx={{ marginTop:'-10px', width: '100%', overflow: 'hidden' }}>      \r\n                    <Grid container style={style.btnfiltro}>\r\n                    <Grid item xs={12} sm={4} md={6}>\r\n                        <CardActions>\r\n                            <TextField \r\n                                fullWidth \r\n                                name=\"textBusqueda\" \r\n                                variant=\"outlined\" \r\n                                label=\"Buscar Contrato\" \r\n                                onChange = {e => setTextBusqueda(e.target.value)} \r\n                                spacing={4} \r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                      <InputAdornment position=\"end\">\r\n                                        <SearchIcon />\r\n                                      </InputAdornment>\r\n                                     )\r\n                                    }}\r\n                               /> \r\n                        </CardActions>\r\n                    </Grid>  \r\n                    </Grid>\r\n                    <Divider></Divider>\r\n                    <CardActions>\r\n                    <TableContainer sx={{ maxHeight: 400 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={style.thead} align=\"left\">Código</TableCell>\r\n                                    <Hidden mdDown>\r\n                                        <TableCell style={style.thead} align=\"left\">Nombre Contrato</TableCell>\r\n                                        <TableCell style={style.thead} align=\"left\">Ruc</TableCell>\r\n                                    </Hidden>\r\n                                    <TableCell style={style.thead} align=\"left\">Razon Social</TableCell> \r\n                                    <TableCell style={style.thead} align=\"left\">Acción</TableCell>                                \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {modelResponse.items==null? null: modelResponse.items.map((row) =>(\r\n                                    <TableRow key ={row.idContrato}>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.codigoContrato}</TableCell>\r\n                                        <Hidden mdDown>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.nombreContrato}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.ruc}</TableCell>  \r\n                                        </Hidden>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.razonSocial}</TableCell>  \r\n                                        <TableCell style={style.tbody} align=\"left\">\r\n                                                <Link to={`/contrato/edit/${row.idContrato}`}> <EditOutlined /></Link>\r\n                                        </TableCell> \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            <TableFooter>                                \r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    </CardActions>\r\n                    <TablePagination \r\n                                    component=\"div\" \r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    count={modelResponse.total}\r\n                                    rowsPerPage={modelRequest.pages}\r\n                                    page={modelRequest.page}\r\n                                    onPageChange={btnCambiarPagina}\r\n                                    onRowsPerPageChange={btnCambiarCantidadPagina}\r\n                                    labelRowsPerPage=\"Paginación\"\r\n                                />\r\n                </Paper>\r\n            </div>\r\n        </Box> \r\n      );\r\n    };\r\n\r\nexport default FormIndexPlan;","import React from 'react'\r\nimport {Button, DialogContent, DialogActions, Dialog, DialogTitle, Typography} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Button \r\n                    variant=\"outlined\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\r\n                >Cancel\r\n                </Button>\r\n                <Button \r\n                   variant=\"outlined\" \r\n                   color=\"error\"\r\n                   onClick={confirmDialog.onConfirm}\r\n                >Si Aceptar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container,Grid, TextField,BottomNavigation,BottomNavigationAction, Divider, Paper, Table, TableBody, TableCell,TableContainer, TableFooter, TableHead, TableRow, Button, DialogContent, DialogActions, Dialog, DialogTitle, FormControl, InputLabel, Select, MenuItem, Autocomplete, ButtonGroup, TablePagination, CardActions} from '@mui/material';\r\nimport {SaveOutlined, ArrowBackOutlined, AddCircleOutline, Search, EditOutlined, DeleteOutlined} from '@mui/icons-material';\r\nimport PeopleAltOutlinedIcon from '@mui/icons-material/PeopleAltOutlined';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport { Box } from '@mui/system';\r\nimport style from \"../../tools/Style\";\r\nimport {useStateValue } from '../../context/store';\r\nimport {useParams, useHistory } from 'react-router-dom';\r\nimport ConfirmDialog from '../../compenentes/ConfirmDialog'\r\n\r\nimport {postGuardarContrato, getObtenerContrato, getListarUsuarioLogueado, deleteUsuarioLogueado, deleteContratoDetalle} from \"../../Services/ContratoService\";\r\n\r\nconst FormCreateContrato = () => {\r\n    let history = useHistory();\r\n    const [{sesionUsuario}, dispatch]  = useStateValue();\r\n    const {id} = useParams();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openUser, setOpenUser] = useState(false);\r\n    const [fechaContrato, setFechaContrato] = useState(new Date());\r\n    const [fechaInicio, setFechaInicio] = useState(null);\r\n    const [fechaFin, setFechaFin] = useState(null);\r\n    const [cliente, setCliente] = useState(null);\r\n    const [modalCliente, setModalCliente] = useState(null);\r\n    const [model1, setModel1] = useState({\r\n        codigoContrato :'',  \r\n        nombreContrato:'',\r\n        ruc:'',\r\n        razonSocial: '',\r\n        listaContratoDet:[],\r\n        listaCliente:[],\r\n        listaPlan:[],\r\n        listaModalidad:[],\r\n        listaEstado:[]\r\n    });     \r\n    const [model2, setModel2] = useState({\r\n        strIdContratoDet:'',\r\n        strIdContrato:'',\r\n        strRuc:'',\r\n        strRazonSocial: '',\r\n        strIdPlan:'',\r\n        strNombrePlan:'',\r\n        strNroLicencia:0,\r\n        strNombreModalidad:'',\r\n        strModalidad:'',\r\n        strNombreEstado:'',\r\n        strEstado:''\r\n    });\r\n    const [modelRequest, setModelRequest] = useState({\r\n        request:'',\r\n        page:0,\r\n        pages: 5\r\n    });\r\n    const [modelResponse, setModelResponse] = useState({\r\n        items:[],\r\n        page:0,\r\n        pages: 0,\r\n        total:0\r\n    });\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const modelMemoria1 = e =>{\r\n        const {name, value} = e.target;\r\n        setModel1(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n    }\r\n\r\n    const modelMemoria2 = e =>{      \r\n        if(e.target.name==\"strIdPlan\"){\r\n            model2.strNombrePlan =model1.listaPlan.filter(y=>y.value==e.target.value)[0].text;  \r\n            model2.strNroLicencia =model1.listaPlan.filter(y=>y.value==e.target.value)[0].intValor;  \r\n        }\r\n        if(e.target.name==\"strModalidad\"){\r\n            model2.strNombreModalidad =model1.listaModalidad.filter(y=>y.value==e.target.value)[0].text;  \r\n        }\r\n        if(e.target.name==\"strEstado\"){\r\n            model2.strNombreEstado =model1.listaEstado.filter(y=>y.value==e.target.value)[0].text;\r\n        }\r\n        const {name, value} = e.target;\r\n        setModel2(anterior=>({\r\n            ...anterior,\r\n            [name]:value\r\n        }));\r\n        \r\n    }\r\n\r\n    const btnAbrirModal = (ids) => { \r\n        let modalDetalle ={};\r\n        modalDetalle.strIdContratoDet='';\r\n        modalDetalle.strIdContrato='';\r\n        modalDetalle.strRuc='';\r\n        modalDetalle.strRazonSocial='';\r\n        modalDetalle.strIdPlan='';\r\n        modalDetalle.strNombrePlan='';\r\n        modalDetalle.strNroLicencia='';\r\n        modalDetalle.strNombreModalidad='';\r\n        modalDetalle.strModalidad='';\r\n        modalDetalle.strNombreEstado='';\r\n        modalDetalle.strEstado='';\r\n\r\n        if(ids!=''){\r\n            let dataDet= model1.listaContratoDet.filter(y=>y.ruc==ids)[0];        \r\n            let cli = {\r\n                value:dataDet.ruc,\r\n                text:dataDet.razonSocial\r\n            }\r\n\r\n            modalDetalle.strIdContratoDet=dataDet.idContratoDet;\r\n            modalDetalle.strIdContrato=dataDet.idContrato;\r\n            modalDetalle.strRuc=dataDet.ruc;\r\n            modalDetalle.strRazonSocial=dataDet.razonSocial;\r\n            modalDetalle.strIdPlan=dataDet.idPlan;\r\n            modalDetalle.strNombrePlan=dataDet.nombrePlan;\r\n            modalDetalle.strNroLicencia=dataDet.nroLicencia;\r\n            modalDetalle.strNombreModalidad=dataDet.nombreModalidad;\r\n            modalDetalle.strModalidad=dataDet.modalidad;\r\n            modalDetalle.strNombreEstado=dataDet.nombreEstado;\r\n            modalDetalle.strEstado=dataDet.estado;\r\n            \r\n            setModel2(modalDetalle);            \r\n            setModalCliente(cli);\r\n            setFechaContrato(new Date(dataDet.fechaContrato));\r\n            setFechaInicio(new Date(dataDet.fechaInicio));\r\n            setFechaFin(new Date(dataDet.fechaFin));            \r\n        }else{\r\n            setModel2(modalDetalle);            \r\n            setModalCliente(null);\r\n            setFechaContrato(new Date());\r\n            setFechaInicio(null);\r\n            setFechaFin(null); \r\n        }  \r\n\r\n        setOpen(true);\r\n    };\r\n    \r\n    const btnAbrirModalUser = (ids) => {\r\n        listarUsuarioLogueado(ids);\r\n        setOpenUser(true);\r\n    };\r\n\r\n    const btnCerarModal = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const btnCerarModalUser = () => {\r\n        setOpenUser(false);\r\n    };\r\n\r\n    const btnAgregarModal = () => {\r\n        \r\n        let dataDet= model1.listaContratoDet.filter(y=>y.ruc==modalCliente.value)[0]; \r\n\r\n        if(dataDet==undefined){\r\n            let det={};\r\n            det.idContratoDet=model2.strIdContratoDet;\r\n            det.ruc=modalCliente.value;\r\n            det.razonSocial=modalCliente.text;\r\n            det.nombrePlan=model2.strNombrePlan;\r\n            det.idPlan=model2.strIdPlan;\r\n            det.nroLicencia=model2.strNroLicencia;\r\n            det.strFechaContrato=fechaContrato.toLocaleDateString();\r\n            det.strFechaInicio=fechaInicio.toLocaleDateString();\r\n            det.strFechaFin=fechaFin.toLocaleDateString();\r\n            det.fechaContrato=fechaContrato;\r\n            det.fechaInicio=fechaInicio;\r\n            det.fechaFin=fechaFin;\r\n            det.nombreModalidad=model2.strNombreModalidad;\r\n            det.modalidad=model2.strModalidad;\r\n            det.nombreEstado=model2.strNombreEstado;\r\n            det.estado=model2.strEstado;\r\n\r\n            model1.listaContratoDet.push(det);\r\n        }else{\r\n            dataDet.idContratoDet=model2.strIdContratoDet;\r\n            dataDet.ruc=modalCliente.value;\r\n            dataDet.razonSocial=modalCliente.text;\r\n            dataDet.nombrePlan=model2.strNombrePlan;\r\n            dataDet.idPlan=model2.strIdPlan;\r\n            dataDet.nroLicencia=model2.strNroLicencia;\r\n            dataDet.strFechaContrato=fechaContrato.toLocaleDateString();\r\n            dataDet.strFechaInicio=fechaInicio.toLocaleDateString();\r\n            dataDet.strFechaFin=fechaFin.toLocaleDateString();\r\n            dataDet.fechaContrato=fechaContrato;\r\n            dataDet.fechaInicio=fechaInicio;\r\n            dataDet.fechaFin=fechaFin;\r\n            dataDet.nombreModalidad=model2.strNombreModalidad;\r\n            dataDet.modalidad=model2.strModalidad;\r\n            dataDet.nombreEstado=model2.strNombreEstado;\r\n            dataDet.estado=model2.strEstado;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const btnGuardar = e =>{\r\n        e.preventDefault();  \r\n        dispatch({\r\n            type : \"OPEN_BACKDROP\",\r\n            open : true\r\n        })\r\n\r\n        model1.ruc=cliente.value;\r\n        model1.razonSocial=cliente.text;\r\n        postGuardarContrato(model1).then(response =>{ \r\n            dispatch({\r\n                type : \"OPEN_BACKDROP\",\r\n                open : false\r\n            })        \r\n            if(response.status === 200) {\r\n                if(response.data.tipoRespuesta!=2){\r\n                    btnRegresar();\r\n                }               \r\n            }\r\n            dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : response.data.mensaje,\r\n                        tipoRespuesta:response.data.tipoRespuesta\r\n                    }\r\n                })\r\n            });\r\n    }\r\n\r\n    const btnEliminarUsuarioLogueado = (ids, user,ruc) =>{\r\n        dispatch({\r\n            type : \"OPEN_BACKDROP\",\r\n            open : true\r\n        })\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n\r\n        let modelUsuario ={};\r\n        modelUsuario.idcontratodet=ids;\r\n        modelUsuario.user=user;\r\n\r\n        deleteUsuarioLogueado(modelUsuario).then(response =>{           \r\n            if(response.status === 200) {\r\n                listarUsuarioLogueado(ruc);\r\n            }\r\n            dispatch({\r\n                type : \"OPEN_BACKDROP\",\r\n                open : false\r\n            })\r\n            dispatch({\r\n                type : \"OPEN_SNACKBAR\",\r\n                openMensaje : {\r\n                    open : true,\r\n                    mensaje : response.data.mensaje,\r\n                    tipoRespuesta:response.data.tipoRespuesta\r\n                }\r\n            })\r\n        });\r\n    }   \r\n\r\n    const btnObtener =()=>{ \r\n        model1.id= (id==undefined || id==0)? \"\": id;\r\n        getObtenerContrato(model1).then(response =>{            \r\n            if(response.status === 200) {               \r\n                setModel1(response.data);\r\n                if(response.data.ruc!=null){\r\n                    let cli = {\r\n                        value:response.data.ruc,\r\n                        text:response.data.razonSocial\r\n                    }\r\n                    setCliente(cli);\r\n                }               \r\n            }else{\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"Hubo un problema en el sistema web\",\r\n                        tipoRespuesta: 0\r\n                    }\r\n                })\r\n            }            \r\n        }); \r\n    }\r\n\r\n    const btnRegresar =()=>{\r\n        history.push(\"/contrato\");\r\n    }\r\n\r\n    const btnEliminarContratoDetalle =(ids,rucs)=> {\r\n        let modelContrato ={};\r\n        modelContrato.ruc=rucs;\r\n\r\n        if(ids==\"\" || ids==null || ids==undefined){\r\n            dispatch({\r\n                type : \"OPEN_BACKDROP\",\r\n                open : true\r\n            })\r\n            setConfirmDialog({\r\n                ...confirmDialog,\r\n                isOpen: false\r\n            }) \r\n\r\n            let dataDet= model1.listaContratoDet.filter(y=>y.ruc!=rucs); \r\n            model1.listaContratoDet = dataDet;\r\n\r\n            setModel1(model1);\r\n            if(model1.ruc!=null){\r\n                let cli = {\r\n                    value:cliente.value,\r\n                    text:cliente.text\r\n                }\r\n                setCliente(cli);\r\n            }\r\n            dispatch({\r\n                type : \"OPEN_BACKDROP\",\r\n                open : false\r\n            })\r\n            dispatch({\r\n                type : \"OPEN_SNACKBAR\",\r\n                    openMensaje : {\r\n                        open : true,\r\n                        mensaje : \"El registro ha sido eliminado\",\r\n                        tipoRespuesta:1\r\n                    }\r\n            })\r\n\r\n        }else{\r\n            deleteContratoDetalle(modelContrato).then(response =>{\r\n                dispatch({\r\n                    type : \"OPEN_BACKDROP\",\r\n                    open : true\r\n                })\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false\r\n                })             \r\n                if(response.status === 200) {\r\n                    if(response.data.tipoRespuesta!=2){\r\n                        let dataDet= model1.listaContratoDet.filter(y=>y.ruc!=rucs); \r\n                        model1.listaContratoDet = dataDet;\r\n        \r\n                        setModel1(model1);\r\n                        if(model1.ruc!=null){\r\n                            let cli = {\r\n                                value:cliente.value,\r\n                                text:cliente.text\r\n                            }\r\n                            setCliente(cli);\r\n                        }\r\n                    }                    \r\n                }\r\n                dispatch({\r\n                    type : \"OPEN_BACKDROP\",\r\n                    open : false\r\n                })\r\n                dispatch({\r\n                    type : \"OPEN_SNACKBAR\",\r\n                        openMensaje : {\r\n                            open : true,\r\n                            mensaje : response.data.mensaje,\r\n                            tipoRespuesta:response.data.tipoRespuesta\r\n                        }\r\n                    })\r\n                });\r\n        }             \r\n    }\r\n\r\n    const btnCambiarPagina = (event, newpag) => {\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            page: parseInt(newpag)\r\n        }));\r\n    }\r\n\r\n    const btnCambiarCantidadPagina = (event) =>{\r\n        setModelRequest((anterior)=>({\r\n            ...anterior,\r\n            pages: parseInt(event.target.value),\r\n            page:0\r\n        }));\r\n    }\r\n\r\n    const listarUsuarioLogueado = async(ids) =>{\r\n        let newpage = modelRequest.page + 1;\r\n\r\n        const model ={\r\n            request: ids,\r\n            page: newpage,\r\n            pages: modelRequest.pages\r\n        }\r\n\r\n        const response = await getListarUsuarioLogueado(model);\r\n        setModelResponse(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        btnObtener();    \r\n    }, []);\r\n\r\n    return (\r\n        <Box style={{width:\"100%\"}}>\r\n            <Paper style={{zIndex: '100'}} sx={style.paperboton} elevation={3}>\r\n                <BottomNavigation showLabels style={{paddingTop: '8px'}}>\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Regresar\" icon={<ArrowBackOutlined color=\"secondary\"/>} onClick={btnRegresar} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Nuevo\" icon={<AddCircleOutline color=\"success\"/>} />\r\n                    <BottomNavigationAction style={{color: '#274c5e'}} label=\"Guardar\" icon={<SaveOutlined color=\"primary\"/>} type=\"submit\" onClick={btnGuardar} />           \r\n                </BottomNavigation>\r\n            </Paper>\r\n    \r\n            <div style={style.form}> \r\n                <Divider>\r\n                    <h3 style={{color: '#1976d2'}}>CONTRATO</h3> \r\n                </Divider>         \r\n                <Container style={style.paper}>  \r\n                    <form>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"codigoContrato\" value={model1.codigoContrato} onChange={modelMemoria1} variant=\"outlined\" fullWidth label=\"Código Contrato\" disabled={true}/>\r\n                            </Grid>    \r\n                            <Grid item xs={12} md={12}>\r\n                                <TextField name=\"nombreContrato\" value={model1.nombreContrato} onChange={modelMemoria1} variant=\"outlined\" fullWidth label=\"Nombre Contrato\"/>\r\n                            </Grid>   \r\n                            <Grid item xs={12} md={12}>\r\n                                <Autocomplete        \r\n                                    disablePortal\r\n                                    id=\"combo-box-demo\"\r\n                                    options={model1.listaCliente}\r\n                                    getOptionLabel={(option)=>`${option.value} - ${option.text}`}\r\n                                    fullWidth\r\n                                    renderInput={(params) => <TextField {...params} label=\"Razón Social\" />}\r\n                                    value={cliente}\r\n                                    onChange={(_event, newTeam) => {\r\n                                        setCliente(newTeam);\r\n                                    }}\r\n                                    \r\n                                />                             \r\n                            </Grid>                             \r\n                            <Grid item xs={12} md={12}>\r\n                                <Grid container justifyContent=\"right\">\r\n                                    <Grid item xs={4} sm={2} md={2}>                                        \r\n                                        <Button fullWidth variant=\"outlined\" color=\"primary\" value={''} onClick={() => btnAbrirModal('')}>\r\n                                            <Search /> Buscar\r\n                                        </Button>\r\n                                    </Grid>                                    \r\n                                </Grid>                          \r\n                            </Grid>\r\n                            <Grid item xs={12} md={12}>\r\n                            </Grid>\r\n                        </Grid>                       \r\n                    </form>\r\n                </Container>\r\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}> \r\n                    <CardActions>              \r\n                    <TableContainer sx={{ maxHeight: 400 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell style={style.thead} align=\"left\">Ruc</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">Razon Social</TableCell>  \r\n                                    <TableCell style={style.thead} align=\"left\">Plan</TableCell>                              \r\n                                    <TableCell style={style.thead} align=\"left\">Licencia</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">F. Contrato</TableCell>\r\n                                    <TableCell style={style.thead} align=\"left\">F. Inicio</TableCell>     \r\n                                    <TableCell style={style.thead} align=\"left\">F. Fin</TableCell>      \r\n                                    <TableCell style={style.thead} align=\"left\">Modalidad</TableCell>         \r\n                                    <TableCell style={style.thead} align=\"left\">Estado</TableCell>  \r\n                                    <TableCell style={style.thead} align=\"left\">Acción</TableCell>                          \r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {model1.listaContratoDet==null? null: model1.listaContratoDet.map((row) =>(\r\n                                    <TableRow key ={row.ruc}>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.ruc}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.razonSocial}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nombrePlan}</TableCell>  \r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nroLicencia}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">{row.strFechaContrato}</TableCell> \r\n                                        <TableCell style={style.tbody} align=\"left\">{row.strFechaInicio}</TableCell> \r\n                                        <TableCell style={style.tbody} align=\"left\">{row.strFechaFin}</TableCell>  \r\n                                        <TableCell style={style.tbody} align=\"left\">{row.nombreModalidad}</TableCell>\r\n                                        <TableCell style={style.tbody} style={style.tbody} align=\"left\">{row.nombreEstado}</TableCell>\r\n                                        <TableCell style={style.tbody} align=\"left\">\r\n                                            <ButtonGroup variant=\"text\" aria-label=\"text button group\">\r\n                                                <Button value={row.idContratoDet} onClick={() => btnAbrirModalUser(row.ruc)}><PeopleAltOutlinedIcon color=\"success\" /></Button>\r\n                                                <Button value={row.idContratoDet} onClick={() => btnAbrirModal(row.ruc)}><EditOutlined color=\"primary\" /></Button>\r\n                                                <Button \r\n                                                    value={row.idContratoDet} \r\n                                                    onClick={() => {\r\n                                                        setConfirmDialog({\r\n                                                            isOpen: true,\r\n                                                            title: 'Estás segura de eliminar este registro?',\r\n                                                            subTitle: \"Despues de eliminar no podras recuperar\",\r\n                                                            onConfirm: () => { btnEliminarContratoDetalle(row.idContratoDet, row.ruc) }\r\n                                                        })\r\n                                                    }}\r\n                                                    >\r\n                                                        <DeleteOutlined color=\"error\" />\r\n                                                </Button>\r\n                                            </ButtonGroup>                                                           \r\n                                        </TableCell> \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    </CardActions>\r\n                </Paper>\r\n            </div>   \r\n\r\n            <Dialog open={open} onClose={btnCerarModal}>\r\n                <DialogTitle>Detalle Contrato</DialogTitle>\r\n                <DialogContent>\r\n                <Grid container spacing={1} style={{paddingTop:10, width:\"100%\"}}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <Autocomplete        \r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={model1.listaCliente}\r\n                            getOptionLabel={(option)=>`${option.value} - ${option.text}`}\r\n                            fullWidth\r\n                            renderInput={(params) => <TextField {...params} label=\"Cliente\" />}\r\n                            value={modalCliente}\r\n                            onChange={(_event, newTeam) => {\r\n                                setModalCliente(newTeam);\r\n                            }}\r\n                        />  \r\n                    </Grid> \r\n                    <Grid item xs={12} md={12}>\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <DatePicker label=\"Fecha Contrato\" value={fechaContrato} onChange={(x) => { setFechaContrato(x); }} renderInput={(params) => <TextField fullWidth {...params} />}/>\r\n                        </LocalizationProvider>                    \r\n                    </Grid> \r\n                    <Grid item xs={12} md={10}>  \r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Plan</InputLabel>\r\n                            <Select variant=\"outlined\" name=\"strIdPlan\" value={model2.strIdPlan} label=\"Plan\" onChange={modelMemoria2}>\r\n                            {model1.listaPlan.map((name) => (\r\n                                <MenuItem\r\n                                    key={name.value}\r\n                                    value={name.value}\r\n                                    >\r\n                                    {name.text}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>    \r\n                    <Grid item xs={12} md={2}>\r\n                        <TextField name=\"strNroLicencia\" value={model2.strNroLicencia}  onChange={modelMemoria2} variant=\"outlined\" fullWidth label=\"Licencia\"/>\r\n                    </Grid> \r\n                    <Grid item xs={12} md={6}>   \r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <DatePicker label=\"Fecha Inicio\" value={fechaInicio} onChange={(x) => { setFechaInicio(x); }} renderInput={(params) => <TextField fullWidth {...params} />}/>\r\n                        </LocalizationProvider>               \r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                            <DatePicker label=\"Fecha Fin\" value={fechaFin} onChange={(x) => { setFechaFin(x); }} renderInput={(params) => <TextField fullWidth {...params} />}/>\r\n                        </LocalizationProvider> \r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Modalidad</InputLabel>\r\n                            <Select variant=\"outlined\" name=\"strModalidad\" value={model2.strModalidad} label=\"Modaliad\" onChange={modelMemoria2}>\r\n                            {model1.listaModalidad.map((name) => (\r\n                                <MenuItem\r\n                                    key={name.value}\r\n                                    value={name.value}\r\n                                    >\r\n                                    {name.text}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Estado</InputLabel>\r\n                            <Select variant=\"outlined\" name=\"strEstado\" value={model2.strEstado} label=\"Estado\" onChange={modelMemoria2}>\r\n                            {model1.listaEstado.map((name) => (\r\n                                <MenuItem\r\n                                    key={name.value}\r\n                                    value={name.value}\r\n                                    >\r\n                                    {name.text}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>                 \r\n                     </Grid>\r\n                </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={btnCerarModal}>Cancel</Button>\r\n                    <Button onClick={btnAgregarModal}>Agregar</Button>\r\n                </DialogActions>\r\n            </Dialog> \r\n\r\n            <Dialog open={openUser} onClose={btnCerarModalUser}>\r\n                <DialogTitle>Usuarios Logueados</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid spacing={1} style={{paddingTop:10, width:\"100%\"}}>\r\n                         \r\n                            <TableContainer sx={{ maxHeight: 400 }}>\r\n                                <Table stickyHeader aria-label=\"sticky table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={style.thead} align=\"left\">Usuario</TableCell>\r\n                                            <TableCell style={style.thead} align=\"left\">Nombre Completo</TableCell>  \r\n                                            <TableCell style={style.thead} align=\"left\">F. Logueo</TableCell> \r\n                                            <TableCell style={style.thead} align=\"left\">Acción</TableCell>                          \r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {modelResponse.items==null? null: modelResponse.items.map((row) =>(\r\n                                        <TableRow key ={row.idUsuarioLogeado}>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.userName}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{row.nombreCompleto}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">{(new Date(row.fechaLogeo)).toLocaleString()}</TableCell>\r\n                                            <TableCell style={style.tbody} align=\"left\">\r\n                                                <ButtonGroup variant=\"text\" aria-label=\"text button group\">                                               \r\n                                                    <Button \r\n                                                     onClick={() => {\r\n                                                        setConfirmDialog({\r\n                                                            isOpen: true,\r\n                                                            title: 'Estás segura de eliminar este registro?',\r\n                                                            subTitle: \"Despues de eliminar no podras recuperar\",\r\n                                                            onConfirm: () => { btnEliminarUsuarioLogueado(row.idContratoDet, row.userName, row.ruc) }\r\n                                                            })\r\n                                                        }}\r\n                                                        >\r\n                                                            <DeleteOutlined color=\"error\" />\r\n                                                        </Button>\r\n                                                </ButtonGroup>                                                           \r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))} \r\n                                    </TableBody>\r\n                                    <TableFooter>                                \r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination \r\n                                    component=\"div\" \r\n                                    rowsPerPageOptions={[5, 10, 25]}\r\n                                    count={modelResponse.total}\r\n                                    rowsPerPage={modelRequest.pages}\r\n                                    page={modelRequest.page}\r\n                                    onPageChange={btnCambiarPagina}\r\n                                    onRowsPerPageChange={btnCambiarCantidadPagina}\r\n                                    labelRowsPerPage=\"Paginación\"\r\n                                />\r\n                       \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={btnCerarModalUser}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog> \r\n\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />                             \r\n        </Box>      \r\n      );\r\n    };\r\n\r\n    \r\nexport default FormCreateContrato;","import React,{ useState, useEffect } from 'react';\n// import { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme/theme\";\nimport {BrowserRouter as Router, Switch, Route}  from 'react-router-dom';\nimport {Grid, Snackbar, ThemeProvider } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n// useState (mensje y sessiones)\nimport { useStateValue } from './context/store';\n\n// layout\nimport AppNavbar from './compenentes/navegacion/AppNavbar';\nimport RutaSegura from './compenentes/navegacion/RutaSegura';\n\n// Pages\nimport Inicio from './pages/inicio/Index';\n\nimport Login from './pages/seguridad/Login';\n\nimport UsuarioIndex from './pages/seguridad/Index';\nimport UsuarioCreate from './pages/seguridad/Create';\nimport UsuarioEdit from './pages/seguridad/Create';\n\nimport PlanIndex from './pages/plan/Index';\nimport PlanCreate from './pages/plan/Create';\nimport PlanEdit from './pages/plan/Create';\n\nimport EmpresaIndex from './pages/empresa/Index';\nimport EmpresaCreate from './pages/empresa/Create';\nimport EmpresaEdit from './pages/empresa/Create';\n\nimport PlanesModuloIndex from './pages/planesmodulo/Index';\n\nimport ContratoIndex from './pages/contrato/Index';\nimport ContratoCreate from './pages/contrato/Create';\nimport ContratoEdit from './pages/contrato/Create';\n\n// Services\nimport {getObtenerUsuarioSesion} from './Services/SeguridadService';\n\n\nfunction App() {\n  const [{ openSnackbar, openBackdrop }, dispatch] = useStateValue();\n  \n  const [iniciaApp, setIniciaApp] = useState(false);\n\n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  useEffect(() => {\n      if(!iniciaApp){\n        getObtenerUsuarioSesion(dispatch).then(response => {\n          setIniciaApp(true);\n        }).catch(error => {\n          setIniciaApp(true);\n        });\n      }\n  }, [iniciaApp]);\n\n  return iniciaApp === false ? null : (\n    <React.Fragment>\n      \n      <Snackbar \n        anchorOrigin = {{vertical:\"bottom\", horizontal:\"center\"}}\n        open = {openSnackbar? openSnackbar.open: false}\n        autoHideDuration = {3000}\n        ContentProps = {{\"aria-describedby\":\"message-id\"}} \n        onClose={()=>\n          dispatch({\n            type : \"OPEN_SNACKBAR\",\n            openMensaje : {\n              open : false,\n              mensaje : \"\",\n              tipoRespuesta:1\n            }\n        })\n      }       \n      >\n        <Alert \n          severity={openSnackbar? ((openSnackbar.tipoRespuesta==1)? \"success\":((openSnackbar.tipoRespuesta==0)?\"error\":\"warning\")): \"info\"}\n          sx={{ width: '100%' }}\n          onClose={()=>\n            dispatch({\n              type : \"OPEN_SNACKBAR\",\n              openMensaje : {\n                open : false,\n                mensaje : \"\",\n                tipoRespuesta:1\n              }\n          })\n        }\n        >\n          <span id=\"message-id\">{openSnackbar? openSnackbar.mensaje:\"\"}</span>\n        </Alert>\n      </Snackbar>\n\n     <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open = {openBackdrop? openBackdrop.open: false}\n        onClose={()=>\n          dispatch({\n            type : \"OPEN_BACKDROP\",\n            open : false\n        })\n      }\n      >\n        <CircularProgress\n         color=\"inherit\"/>\n      </Backdrop>\n\n      <Router>\n            <ThemeProvider theme={theme}>    \n            <AppNavbar />      \n              <Grid container>\n                  <Switch>\n\n                    <Route exact path=\"/auth/login\" component={Login} />\n\n                    <RutaSegura \n                      exact\n                      path = \"/inicio\"\n                      component = {Inicio}\n                    />\n\n                    <RutaSegura exact path = \"/usuario\" component = {UsuarioIndex} />\n                    <RutaSegura exact path = \"/usuario/create\" component = {UsuarioCreate} />\n                    <RutaSegura exact path = \"/usuario/edit/:id\" component = {UsuarioEdit} />\n\n                    <RutaSegura exact path = \"/plan\" component = {PlanIndex} />\n                    <RutaSegura exact path = \"/plan/create\" component = {PlanCreate} />\n                    <RutaSegura exact path = \"/plan/edit/:id\" component = {PlanEdit} />\n\n                    <RutaSegura exact path = \"/empresa\" component = {EmpresaIndex} />\n                    <RutaSegura exact path = \"/empresa/create\" component = {EmpresaCreate} />\n                    <RutaSegura exact path = \"/empresa/edit/:id\" component = {EmpresaEdit} />\n\n                    <RutaSegura exact path = \"/planesmodulo\" component = {PlanesModuloIndex} />\n\n                    <RutaSegura exact path = \"/contrato\" component = {ContratoIndex} />\n                    <RutaSegura exact path = \"/contrato/create\" component = {ContratoCreate} />\n                    <RutaSegura exact path = \"/contrato/edit/:id\" component = {ContratoEdit} />\n\n                  </Switch>\n              </Grid>\n            </ThemeProvider>\n      </Router> \n    </React.Fragment>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n    usuario: {\r\n      nombreCompleto: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      foto: \"\",\r\n    },\r\n    autenticado: false,\r\n  };\r\n  \r\n  const sesionUsuarioReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"INICIAR_SESION\":\r\n        return {\r\n          ...state,\r\n          usuario: action.sesion,\r\n          autenticado: action.autenticado,\r\n        };\r\n      case \"SALIR_SESION\":\r\n          return {\r\n              ...state,\r\n              usuario: action.nuevoUsuario,\r\n              autenticado : action.autenticado\r\n          };\r\n      case \"ACTUALIZAR_USUARIO\" :\r\n          return {\r\n              ...state,\r\n              usuario : action.nuevoUsuario,\r\n              autenticado : action.autenticado\r\n          }\r\n      default : return state;\r\n    }\r\n  };\r\n  \r\n  export default sesionUsuarioReducer;\r\n  ","const initialState  = {\r\n    open : false,\r\n    mensaje: \"\",\r\n    tipoRespuesta:1\r\n};\r\n\r\nconst openSnackbarReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"OPEN_SNACKBAR\" :\r\n            return {\r\n                ...state,\r\n                open : action.openMensaje.open,\r\n                mensaje : action.openMensaje.mensaje,\r\n                tipoRespuesta : action.openMensaje.tipoRespuesta,\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default openSnackbarReducer;\r\n","const initialState  = {\r\n    open : false\r\n};\r\n\r\nconst openBackdropReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"OPEN_BACKDROP\" :\r\n            return {\r\n                ...state,\r\n                open : action.open\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default openBackdropReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {initialState} from './context/initialState';\nimport {StateProvider} from './context/store';\nimport {mainReducer} from './context/reducers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={mainReducer}>\n      <App />\n    </StateProvider>   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","export const initialState = {};","import sesionUsuarioReducer from './sesionUsuarioReducer';\r\nimport openSnackbarReducer from './openSnackbarReducer';\r\nimport openBackdropReducer from './openBackdropReducer';\r\n\r\nexport const mainReducer = ({sesionUsuario, openSnackbar, openBackdrop}, action) => {\r\n    return {\r\n        sesionUsuario : sesionUsuarioReducer(sesionUsuario, action),\r\n        openSnackbar :  openSnackbarReducer(openSnackbar, action),\r\n        openBackdrop :  openBackdropReducer(openBackdrop, action)\r\n    }\r\n}"],"sourceRoot":""}